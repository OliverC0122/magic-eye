{"ast":null,"code":"var _jsxFileName = \"/Users/oliverchen/Projects/FaceDetector/facedector/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\n\n// This function returns the request options for the Clarifai API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiJSONRequest = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = 'a293b1da5a3a4e67a2636069fdea6ba7';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'clarifai';\n  const APP_ID = 'main';\n  // Change these to whatever model and image URL you want to use\n  const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n\n  // setup the Json request\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n          // \"base64\": IMAGE_BYTES_STRING\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends React.Component {\n  constructor() {\n    super();\n    // This is a function that will be passed down to the ImageLinkForm component\n    this.onInputChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      console.log('click');\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifaiJSONRequest(this.state.input)).then(response => response.json()).then(result => {\n        const regions = result.outputs[0].data.regions;\n        regions.forEach(region => {\n          // Accessing and rounding the bounding box values\n\n          const boundingBox = region.region_info.bounding_box;\n          // eslint-disable-next-line no-unused-vars\n          const topRow = boundingBox.top_row.toFixed(3);\n          const leftCol = boundingBox.left_col.toFixed(3);\n          const bottomRow = boundingBox.bottom_row.toFixed(3);\n          const rightCol = boundingBox.right_col.toFixed(3);\n        });\n      }).catch(error => console.log('error', error));\n    };\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n          type: \"cobweb\",\n          bg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: this.state.boxes,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","FaceRecognition","jsxDEV","_jsxDEV","returnClarifaiJSONRequest","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","Component","constructor","onInputChange","event","console","log","target","value","setState","input","onButtonSubmit","state","fetch","then","response","json","result","regions","outputs","data","forEach","region","boundingBox","region_info","bounding_box","topRow","top_row","toFixed","leftCol","left_col","bottomRow","bottom_row","rightCol","right_col","catch","error","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber","boxes","box"],"sources":["/Users/oliverchen/Projects/FaceDetector/facedector/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\"; \nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\n\n// This function returns the request options for the Clarifai API\nconst returnClarifaiJSONRequest = (imageUrl) => {\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = 'a293b1da5a3a4e67a2636069fdea6ba7';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = 'clarifai';\n    const APP_ID = 'main';  \n    // Change these to whatever model and image URL you want to use\n    const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n\n    // setup the Json request\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": IMAGE_URL\n                      // \"base64\": IMAGE_BYTES_STRING\n                  }\n              }\n          }\n      ]    \n  });\n  \n  const requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n}\n\n\nclass App extends React.Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    }\n  }\n\n  // This is a function that will be passed down to the ImageLinkForm component\n  onInputChange = (event) => {\n    console.log(event.target.value);\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    console.log('click');\n    this.setState({imageUrl: this.state.input});\n    \n    fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifaiJSONRequest(this.state.input))\n    .then(response => response.json())\n    .then(result => {\n\n        const regions = result.outputs[0].data.regions;\n\n        regions.forEach(region => {\n            // Accessing and rounding the bounding box values\n            \n            const boundingBox = region.region_info.bounding_box;\n            // eslint-disable-next-line no-unused-vars\n            const topRow = boundingBox.top_row.toFixed(3);\n            const leftCol = boundingBox.left_col.toFixed(3);\n            const bottomRow = boundingBox.bottom_row.toFixed(3);\n            const rightCol = boundingBox.right_col.toFixed(3);\n\n        });\n\n    })\n    .catch(error => console.log('error', error));\n  \n  }\n\n    render = () => {\n      return (\n        <div className=\"App\">\n        \n        <ParticlesBg type=\"cobweb\" bg={true} />\n          <Navigation/>\n          <Logo/>\n          <Rank/>\n          <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/> {/* Pass in The onInputChange event as a props*/}\n          <FaceRecognition boxes={this.state.boxes} imageUrl={this.state.imageUrl}/>\n          \n        </div>\n      );\n      }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}