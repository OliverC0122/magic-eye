{"ast":null,"code":"var _jsxFileName = \"/Users/oliverchen/Projects/FaceDetector/facedector/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Clarifai from 'clarifai';\n\n// ///////////////////////////////////////////////////////////////////////////////////////////////////\n// // In this section, we set the user authentication, user and app ID, model details, and the URL\n// // of the image we want as an input. Change these strings to run your own example.\n// //////////////////////////////////////////////////////////////////////////////////////////////////\n\n// // Your PAT (Personal Access Token) can be found in the portal under Authentification\n// const PAT = 'a293b1da5a3a4e67a2636069fdea6ba7';\n// // Specify the correct user_id/app_id pairings\n// // Since you're making inferences outside your app's scope\n// const USER_ID = 'oliver_0122';\n// const APP_ID = 'face-detection';\n// // Change these to whatever model and image URL you want to use\n// const MODEL_ID = 'face-detection';\n// const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\n// const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n// // To use image bytes, assign its variable   \n// // const IMAGE_BYTES_STRING = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERETFhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wAARCAAoACgDASIAAhEBAxEB/8QAGQAAAgMBAAAAAAAAAAAAAAAAAAYDBQcE/8QAMBAAAQMDAwMDAgQHAAAAAAAAAQIDBAAFEQYSIQcTMTJBURRhCBYikSNScXKhsdH/xAAZAQACAwEAAAAAAAAAAAAAAAAFBgIDBAf/xAAtEQABAwMBBgQHAQAAAAAAAAABAgMRAAQhMQUSE0FRYQaBocEUFiJCcrHR8P/aAAwDAQACEQMRAD8A3+RYY1unSYzCS0ttZUkAgktn0q5yT7jPyDUC4wdGwycH5U2Kt9ZQ7VI1qw5PkvQy3CSVPpf7aQjuKyFH25xzn3pHn3TVNy01Hl2hyy6YdkSpKsS9sl/6RlI3rRu3dxWd6spwnAGPIJTfl925fcLaoSDHXvyo6i9SlCQrU9wKln3OyWiaDN1RAbW3kKbSd7gPtwMkH/tTWy9afuy1iPfnXMAblITwkE4yf08cn3pSbYt1uts24XH6fUbiLAuY1MWyGkLEmUW0rcCRvUpQ5CtwKQCPgi4S1ZbDe4sd9NntDEe79m3uOBLTr0IR9jzodSMqUpTu9JJ8owD7UTT4ZCfv9PbP7860m+s+HBSrejWRuz2kAxoesGYxTW/Zlpkwo1vkuSly3UgKWQUhHJUvIHsAaKTemF8XE6sWmxyZkiaZrMh1jv8ArQNpUVqB8FW0njHqx4zRVVhsph1KlKk5xQ+7uHmikaSJrQerMByet2IwvtuTLa4xv2k7Rk84H9x/esHv92d01boenLXGcuiWrFIhLlpbcaQ2/JdK3VJCkAq2pAR7Zz7YxWudY9fxNIdQbNGkR5TyX4aisNNpUMFZAzkj4NK0jq9ZpbLr0PSlzkhrlZDaQlP3P8Q4/ap3F87bPucJEkx/hHv60b2TYXLrKN5sramYECSQRk9M6c6zmJ+eb5Hi22M7cnWGIQgFLbX0zSo4PDa1YBcTgDyMjJ/qbGPabH08SJt1Uzc9QqRliGg5QySPKvgc+TyfYDmmTUWpNYz7ctxoQdPQshCktupckDJUPUcJT6DwMq8YyaQ9VL0pCS8zapcq4SVOBZmPDO8/cnknlWcDBwn4NYnPjLkQ+qE9OtOVlYpeVHDCEkkkJyT+SuQzy5Y0ru6Ez511/Efa5s1fdkOtyVurIxgdlQAA9gOKKPwolU7remU5hCGYEgo38KUv9I/0TRTDYJCWQBSF4rIN/CRgAR0iTpVD1j1g/qDqJcJqlKcjB9bcda142MpOEJAzgeMnjyTSyze5KEuNRpDoDvC0oe4X9iAeaKKFK+oya6fbOqYbDTeEiAPKpHdS3gBLYc7RQkp3ApQog+cq8nwPJrljzxnPZbUfnugn/NFFRgEVch9xKsH0H8pg6e3x3T3UC1ajaZITGkJLoS4MKbOUrzz/ACKVRRRVzVwtoQmhG1NkWu0HuI+JI8u/Kv/Z';\n\n// ///////////////////////////////////////////////////////////////////////////////////\n// // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n// ///////////////////////////////////////////////////////////////////////////////////\n\n// const raw = JSON.stringify({\n//     \"user_app_id\": {\n//         \"user_id\": USER_ID,\n//         \"app_id\": APP_ID\n//     },\n//     \"inputs\": [\n//         {\n//             \"data\": {\n//                 \"image\": {\n//                     \"url\": IMAGE_URL\n//                     // \"base64\": IMAGE_BYTES_STRING\n//                 }\n//             }\n//         }\n//     ]\n// });\n\n// const requestOptions = {\n//     method: 'POST',\n//     headers: {\n//         'Accept': 'application/json',\n//         'Authorization': 'Key ' + PAT\n//     },\n//     body: raw\n// };\n\n// // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// // this will default to the latest version_id\n\n// fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\n//     .then(response => response.json())\n//     .then(result => {\n\n//         const regions = result.outputs[0].data.regions;\n\n//         regions.forEach(region => {\n//             // Accessing and rounding the bounding box values\n//             const boundingBox = region.region_info.bounding_box;\n//             const topRow = boundingBox.top_row.toFixed(3);\n//             const leftCol = boundingBox.left_col.toFixed(3);\n//             const bottomRow = boundingBox.bottom_row.toFixed(3);\n//             const rightCol = boundingBox.right_col.toFixed(3);\n\n//             region.data.concepts.forEach(concept => {\n//                 // Accessing and rounding the concept value\n//                 const name = concept.name;\n//                 const value = concept.value.toFixed(4);\n\n//                 console.log(`${name}: ${value} BBox: ${topRow}, ${leftCol}, ${bottomRow}, ${rightCol}`);\n\n//             });\n//         });\n\n//     })\n//     .catch(error => console.log('error', error));\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'c96fc89aca0c44999f6c1db49af575dc'\n});\nclass App extends React.Component {\n  constructor() {\n    super();\n    // This is a function that will be passed down to the ImageLinkForm component\n    this.onInputChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      console.log('click');\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(function (response) {\n        // do something with response\n        console.log(response);\n      }, function (err) {\n        // there was an error\n        console.log(err);\n      });\n    };\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n          type: \"cobweb\",\n          bg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(FaceRecognition, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this);\n    };\n    this.state = {\n      input: '0.0'\n    };\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","FaceRecognition","Clarifai","jsxDEV","_jsxDEV","app","App","apiKey","Component","constructor","onInputChange","event","console","log","target","value","setState","input","onButtonSubmit","models","predict","FACE_DETECT_MODEL","state","then","response","err","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/oliverchen/Projects/FaceDetector/facedector/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\"; \nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport Clarifai from 'clarifai';\n \n\n\n// ///////////////////////////////////////////////////////////////////////////////////////////////////\n// // In this section, we set the user authentication, user and app ID, model details, and the URL\n// // of the image we want as an input. Change these strings to run your own example.\n// //////////////////////////////////////////////////////////////////////////////////////////////////\n\n// // Your PAT (Personal Access Token) can be found in the portal under Authentification\n// const PAT = 'a293b1da5a3a4e67a2636069fdea6ba7';\n// // Specify the correct user_id/app_id pairings\n// // Since you're making inferences outside your app's scope\n// const USER_ID = 'oliver_0122';\n// const APP_ID = 'face-detection';\n// // Change these to whatever model and image URL you want to use\n// const MODEL_ID = 'face-detection';\n// const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\n// const IMAGE_URL = 'https://samples.clarifai.com/metro-north.jpg';\n// // To use image bytes, assign its variable   \n// // const IMAGE_BYTES_STRING = '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERETFhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wAARCAAoACgDASIAAhEBAxEB/8QAGQAAAgMBAAAAAAAAAAAAAAAAAAYDBQcE/8QAMBAAAQMDAwMDAgQHAAAAAAAAAQIDBAAFEQYSIQcTMTJBURRhCBYikSNScXKhsdH/xAAZAQACAwEAAAAAAAAAAAAAAAAFBgIDBAf/xAAtEQABAwMBBgQHAQAAAAAAAAABAgMRAAQhMQUSE0FRYQaBocEUFiJCcrHR8P/aAAwDAQACEQMRAD8A3+RYY1unSYzCS0ttZUkAgktn0q5yT7jPyDUC4wdGwycH5U2Kt9ZQ7VI1qw5PkvQy3CSVPpf7aQjuKyFH25xzn3pHn3TVNy01Hl2hyy6YdkSpKsS9sl/6RlI3rRu3dxWd6spwnAGPIJTfl925fcLaoSDHXvyo6i9SlCQrU9wKln3OyWiaDN1RAbW3kKbSd7gPtwMkH/tTWy9afuy1iPfnXMAblITwkE4yf08cn3pSbYt1uts24XH6fUbiLAuY1MWyGkLEmUW0rcCRvUpQ5CtwKQCPgi4S1ZbDe4sd9NntDEe79m3uOBLTr0IR9jzodSMqUpTu9JJ8owD7UTT4ZCfv9PbP7860m+s+HBSrejWRuz2kAxoesGYxTW/Zlpkwo1vkuSly3UgKWQUhHJUvIHsAaKTemF8XE6sWmxyZkiaZrMh1jv8ArQNpUVqB8FW0njHqx4zRVVhsph1KlKk5xQ+7uHmikaSJrQerMByet2IwvtuTLa4xv2k7Rk84H9x/esHv92d01boenLXGcuiWrFIhLlpbcaQ2/JdK3VJCkAq2pAR7Zz7YxWudY9fxNIdQbNGkR5TyX4aisNNpUMFZAzkj4NK0jq9ZpbLr0PSlzkhrlZDaQlP3P8Q4/ap3F87bPucJEkx/hHv60b2TYXLrKN5sramYECSQRk9M6c6zmJ+eb5Hi22M7cnWGIQgFLbX0zSo4PDa1YBcTgDyMjJ/qbGPabH08SJt1Uzc9QqRliGg5QySPKvgc+TyfYDmmTUWpNYz7ctxoQdPQshCktupckDJUPUcJT6DwMq8YyaQ9VL0pCS8zapcq4SVOBZmPDO8/cnknlWcDBwn4NYnPjLkQ+qE9OtOVlYpeVHDCEkkkJyT+SuQzy5Y0ru6Ez511/Efa5s1fdkOtyVurIxgdlQAA9gOKKPwolU7remU5hCGYEgo38KUv9I/0TRTDYJCWQBSF4rIN/CRgAR0iTpVD1j1g/qDqJcJqlKcjB9bcda142MpOEJAzgeMnjyTSyze5KEuNRpDoDvC0oe4X9iAeaKKFK+oya6fbOqYbDTeEiAPKpHdS3gBLYc7RQkp3ApQog+cq8nwPJrljzxnPZbUfnugn/NFFRgEVch9xKsH0H8pg6e3x3T3UC1ajaZITGkJLoS4MKbOUrzz/ACKVRRRVzVwtoQmhG1NkWu0HuI+JI8u/Kv/Z';\n\n// ///////////////////////////////////////////////////////////////////////////////////\n// // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n// ///////////////////////////////////////////////////////////////////////////////////\n\n// const raw = JSON.stringify({\n//     \"user_app_id\": {\n//         \"user_id\": USER_ID,\n//         \"app_id\": APP_ID\n//     },\n//     \"inputs\": [\n//         {\n//             \"data\": {\n//                 \"image\": {\n//                     \"url\": IMAGE_URL\n//                     // \"base64\": IMAGE_BYTES_STRING\n//                 }\n//             }\n//         }\n//     ]\n// });\n\n// const requestOptions = {\n//     method: 'POST',\n//     headers: {\n//         'Accept': 'application/json',\n//         'Authorization': 'Key ' + PAT\n//     },\n//     body: raw\n// };\n\n// // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// // this will default to the latest version_id\n\n// fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\n//     .then(response => response.json())\n//     .then(result => {\n\n//         const regions = result.outputs[0].data.regions;\n\n//         regions.forEach(region => {\n//             // Accessing and rounding the bounding box values\n//             const boundingBox = region.region_info.bounding_box;\n//             const topRow = boundingBox.top_row.toFixed(3);\n//             const leftCol = boundingBox.left_col.toFixed(3);\n//             const bottomRow = boundingBox.bottom_row.toFixed(3);\n//             const rightCol = boundingBox.right_col.toFixed(3);\n\n//             region.data.concepts.forEach(concept => {\n//                 // Accessing and rounding the concept value\n//                 const name = concept.name;\n//                 const value = concept.value.toFixed(4);\n\n//                 console.log(`${name}: ${value} BBox: ${topRow}, ${leftCol}, ${bottomRow}, ${rightCol}`);\n                \n//             });\n//         });\n\n//     })\n//     .catch(error => console.log('error', error));\n\n\nconst app = new Clarifai.App({\n  apiKey: 'c96fc89aca0c44999f6c1db49af575dc'\n });\n\n\nclass App extends React.Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      input: '0.0',\n    }\n  }\n\n  // This is a function that will be passed down to the ImageLinkForm component\n  onInputChange = (event) => {\n    console.log(event.target.value);\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    console.log('click');\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then(\n        function(response) {\n          // do something with response\n          console.log(response);\n        },\n        function(err) {\n          // there was an error\n          console.log(err);\n        }\n      );\n  \n  }\n\n    render = () => {\n      return (\n        <div className=\"App\">\n        \n        <ParticlesBg type=\"cobweb\" bg={true} />\n          <Navigation/>\n          <Logo/>\n          <Rank/>\n          <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/> {/* Pass in The onInputChange event as a props*/}\n          <FaceRecognition />\n          \n        </div>\n      );\n      }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,eAAe,MAAM,iDAAiD;AAC7E,OAAOC,QAAQ,MAAM,UAAU;;AAI/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,GAAG,GAAG,IAAIH,QAAQ,CAACI,GAAG,CAAC;EAC3BC,MAAM,EAAE;AACT,CAAC,CAAC;AAGH,MAAMD,GAAG,SAASX,KAAK,CAACa,SAAS,CAAC;EAEhCC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAMT;IAAA,KACAC,aAAa,GAAIC,KAAK,IAAK;MACzBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;MAC/B,IAAI,CAACC,QAAQ,CAAC;QAACC,KAAK,EAAEN,KAAK,CAACG,MAAM,CAACC;MAAK,CAAC,CAAC;IAC5C,CAAC;IAAA,KAEDG,cAAc,GAAG,MAAM;MACrBN,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBR,GAAG,CAACc,MAAM,CAACC,OAAO,CAAClB,QAAQ,CAACmB,iBAAiB,EAAE,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC,CAC7DM,IAAI,CACH,UAASC,QAAQ,EAAE;QACjB;QACAZ,OAAO,CAACC,GAAG,CAACW,QAAQ,CAAC;MACvB,CAAC,EACD,UAASC,GAAG,EAAE;QACZ;QACAb,OAAO,CAACC,GAAG,CAACY,GAAG,CAAC;MAClB,CACF,CAAC;IAEL,CAAC;IAAA,KAECC,MAAM,GAAG,MAAM;MACb,oBACEtB,OAAA;QAAKuB,SAAS,EAAC,KAAK;QAAAC,QAAA,gBAEpBxB,OAAA,CAACJ,WAAW;UAAC6B,IAAI,EAAC,QAAQ;UAACC,EAAE,EAAE;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrC9B,OAAA,CAACR,UAAU;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACb9B,OAAA,CAACP,IAAI;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACP9B,OAAA,CAACL,IAAI;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACP9B,OAAA,CAACN,aAAa;UAACY,aAAa,EAAE,IAAI,CAACA,aAAc;UAACQ,cAAc,EAAE,IAAI,CAACA;QAAe;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,KAAC,eACzF9B,OAAA,CAACH,eAAe;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CAAC;IAER,CAAC;IAxCH,IAAI,CAACZ,KAAK,GAAG;MACXL,KAAK,EAAE;IACT,CAAC;EACH;AAsCF;AAEA,eAAeX,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}